"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7175],{3905:(e,n,r)=>{r.r(n),r.d(n,{MDXContext:()=>u,MDXProvider:()=>p,mdx:()=>b,useMDXComponents:()=>d,withMDXComponents:()=>c});var t=r(67294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(){return o=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var r=arguments[n];for(var t in r)Object.prototype.hasOwnProperty.call(r,t)&&(e[t]=r[t])}return e},o.apply(this,arguments)}function s(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?s(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=t.createContext({}),c=function(e){return function(n){var r=d(n.components);return t.createElement(e,o({},n,{components:r}))}},d=function(e){var n=t.useContext(u),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},p=function(e){var n=d(e.components);return t.createElement(u.Provider,{value:n},e.children)},m="mdxType",f={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},g=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=d(r),p=a,m=c["".concat(s,".").concat(p)]||c[p]||f[p]||o;return r?t.createElement(m,i(i({ref:n},u),{},{components:r})):t.createElement(m,i({ref:n},u))}));function b(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=g;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i[m]="string"==typeof e?e:a,s[1]=i;for(var u=2;u<o;u++)s[u]=r[u];return t.createElement.apply(null,s)}return t.createElement.apply(null,r)}g.displayName="MDXCreateElement"},18679:(e,n,r)=>{r.r(n),r.d(n,{default:()=>s});var t=r(67294),a=r(86010);const o={tabItem:"tabItem_Ymn6"};function s(e){let{children:n,hidden:r,className:s}=e;return t.createElement("div",{role:"tabpanel",className:(0,a.default)(o.tabItem,s),hidden:r},n)}},73992:(e,n,r)=>{r.r(n),r.d(n,{default:()=>w});var t=r(87462),a=r(67294),o=r(86010),s=r(72957),i=r(16550),l=r(75238),u=r(33609),c=r(92560);function d(e){return function(e){return a.Children.map(e,(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:n,label:r,attributes:t,default:a}}=e;return{value:n,label:r,attributes:t,default:a}}))}function p(e){const{values:n,children:r}=e;return(0,a.useMemo)((()=>{const e=n??d(r);return function(e){const n=(0,u.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,r])}function m(e){let{value:n,tabValues:r}=e;return r.some((e=>e.value===n))}function f(e){let{queryString:n=!1,groupId:r}=e;const t=(0,i.k6)(),o=function(e){let{queryString:n=!1,groupId:r}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:n,groupId:r});return[(0,l._X)(o),(0,a.useCallback)((e=>{if(!o)return;const n=new URLSearchParams(t.location.search);n.set(o,e),t.replace({...t.location,search:n.toString()})}),[o,t])]}function g(e){const{defaultValue:n,queryString:r=!1,groupId:t}=e,o=p(e),[s,i]=(0,a.useState)((()=>function(e){let{defaultValue:n,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const t=r.find((e=>e.default))??r[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:o}))),[l,u]=f({queryString:r,groupId:t}),[d,g]=function(e){let{groupId:n}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(n),[t,o]=(0,c.Nk)(r);return[t,(0,a.useCallback)((e=>{r&&o.set(e)}),[r,o])]}({groupId:t}),b=(()=>{const e=l??d;return m({value:e,tabValues:o})?e:null})();(0,a.useLayoutEffect)((()=>{b&&i(b)}),[b]);return{selectedValue:s,selectValue:(0,a.useCallback)((e=>{if(!m({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),g(e)}),[u,g,o]),tabValues:o}}var b=r(51048);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function h(e){let{className:n,block:r,selectedValue:i,selectValue:l,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:d}=(0,s.o5)(),p=e=>{const n=e.currentTarget,r=c.indexOf(n),t=u[r].value;t!==i&&(d(n),l(t))},m=e=>{let n=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const r=c.indexOf(e.currentTarget)+1;n=c[r]??c[0];break}case"ArrowLeft":{const r=c.indexOf(e.currentTarget)-1;n=c[r]??c[c.length-1];break}}n?.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.default)("tabs",{"tabs--block":r},n)},u.map((e=>{let{value:n,label:r,attributes:s}=e;return a.createElement("li",(0,t.Z)({role:"tab",tabIndex:i===n?0:-1,"aria-selected":i===n,key:n,ref:e=>c.push(e),onKeyDown:m,onClick:p},s,{className:(0,o.default)("tabs__item",v.tabItem,s?.className,{"tabs__item--active":i===n})}),r??n)})))}function y(e){let{lazy:n,children:r,selectedValue:t}=e;const o=(Array.isArray(r)?r:[r]).filter(Boolean);if(n){const e=o.find((e=>e.props.value===t));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},o.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==t}))))}function x(e){const n=g(e);return a.createElement("div",{className:(0,o.default)("tabs-container",v.tabList)},a.createElement(h,(0,t.Z)({},e,n)),a.createElement(y,(0,t.Z)({},e,n)))}function w(e){const n=(0,b.default)();return a.createElement(x,(0,t.Z)({key:String(n)},e))}},4845:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>f,frontMatter:()=>i,metadata:()=>u,toc:()=>d});var t=r(87462),a=(r(67294),r(3905)),o=(r(79524),r(73992)),s=r(18679);const i={sidebar_position:5,title:"Access Sensor Profiles"},l="Access Sensor Profiles Using the CLI or SDK",u={unversionedId:"ARK/sdk/concepts/sdk_sensor_profiles",id:"ARK/sdk/concepts/sdk_sensor_profiles",title:"Access Sensor Profiles",description:"Overview",source:"@site/docs/ARK/sdk/concepts/sdk_sensor_profiles.mdx",sourceDirName:"ARK/sdk/concepts",slug:"/ARK/sdk/concepts/sdk_sensor_profiles",permalink:"/projectaria_tools/docs/ARK/sdk/concepts/sdk_sensor_profiles",draft:!1,editUrl:"https://github.com/facebookresearch/projectaria_tools/tree/main/website/docs/ARK/sdk/concepts/sdk_sensor_profiles.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,title:"Access Sensor Profiles"},sidebar:"tutorialSidebar",previous:{title:"Streaming Undistorted RGB Image Using Calibration",permalink:"/projectaria_tools/docs/ARK/sdk/samples/undistort_rgb_image"},next:{title:"Streaming Internals",permalink:"/projectaria_tools/docs/ARK/sdk/concepts/streaming_internals"}},c={},d=[{value:"Overview",id:"overview",level:2},{value:"Retrieve list of available sensor profiles",id:"retrieve-list-of-available-sensor-profiles",level:2},{value:"Use Recording (Sensor) Profile",id:"use-recording-sensor-profile",level:2}],p={toc:d},m="wrapper";function f(e){let{components:n,...r}=e;return(0,a.mdx)(m,(0,t.Z)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,a.mdx)("h1",{id:"access-sensor-profiles-using-the-cli-or-sdk"},"Access Sensor Profiles Using the CLI or SDK"),(0,a.mdx)("h2",{id:"overview"},"Overview"),(0,a.mdx)("p",null,"This page provides information about how to access information about how your Project Aria glasses sensors can be configured and are configured, using the Cli or SDK."),(0,a.mdx)("p",null,"Project Aria glasses have multiple recording profiles that enable users to choose what sensors to record or stream with and what settings to use. Go to the ",(0,a.mdx)("a",{parentName:"p",href:"/projectaria_tools/docs/tech_spec/recording_profiles"},"Recording Profiles page")," for more information about possible sensor configurations. You can also view different recording profile details when you select ",(0,a.mdx)("strong",{parentName:"p"},"Create a Recording")," in the Mobile Companion app."),(0,a.mdx)("h2",{id:"retrieve-list-of-available-sensor-profiles"},"Retrieve list of available sensor profiles"),(0,a.mdx)("p",null,"The CLI or SDK can be used to retrieve the available sensor profiles depending on your usage, recording or streaming:"),(0,a.mdx)(o.default,{defaultValue:"sdk",values:[{label:"SDK",value:"sdk"},{label:"CLI",value:"cli"}],mdxType:"Tabs"},(0,a.mdx)(s.default,{value:"sdk",mdxType:"TabItem"},(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},"import aria.sdk as aria\n\ndevice_client = aria.DeviceClient()\ndevice = device_client.connect()\n\n# sensors profiles for recording\nrecording_manager = device.recording_manager\nrecording_profiles = recording_manager.recording_profiles\nprint(*recording_profiles)\n\n# sensors profiles for streaming\nstreaming_manager = device.streaming_manager\nstreaming_profiles = streaming_manager.streaming_profiles\nprint(*streaming_profiles)\n"))),(0,a.mdx)(s.default,{value:"cli",mdxType:"TabItem"},(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-bash"},"# sensors profiles for recording\naria recording profiles --save-json --json-dir ~/recordingProfiles\n\n# sensors profiles for streaming\naria streaming profiles --save-json --json-dir ~/streamingProfiles\n")))),(0,a.mdx)("p",null,"The ",(0,a.mdx)("inlineCode",{parentName:"p"},"aria streaming profiles")," command above will store the sensor profiles as json files under the specified directory where you will find e.g. ",(0,a.mdx)("inlineCode",{parentName:"p"},"profile12.json")," which contains the following"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-json"},'{\n "name": "profile12",\n "description": "Streaming mode with JPEG (RGB 10fps 2MP, SLAM 10fps, ET 10fps QVGA, JPEG; Audio, GPS, Wi-Fi and BLE off)",\n "imu1": {\n  "enabled": true,\n  "dataRateHz": 1000\n },\n "imu2": {\n  "enabled": true,\n  "dataRateHz": 800\n },\n "magnetometer": {\n  "enabled": true,\n  "dataRateHz": 10\n },\n "barometer": {\n  "enabled": true,\n  "dataRateHz": 50\n },\n "audio": {\n  "enabled": false,\n  "numChannels": 0,\n  "sampleRateHz": "0",\n  "periodSize": 0\n },\n "gps": {\n  "enabled": false,\n  "dataRateHz": 0\n },\n "ble": {\n  "enabled": false,\n  "scanDurationMs": 0\n },\n "wifi": {\n  "enabled": false,\n  "scanDurationMs": 0,\n  "wifiScanModeActive": false,\n  "wifiMinDwellTimeMs": 0,\n  "wifiMaxDwellTimeMs": 0\n },\n "slamCameras": {\n  "enabled": true,\n  "width": 640,\n  "height": 480,\n  "fps": 10,\n  "autoExposureEnabled": true,\n  "exposureMinUs": "0",\n  "exposureMaxUs": "0",\n  "gainMin": 0,\n  "gainMax": 0,\n  "exposureUs": "0",\n  "gain": 0,\n  "irLedEnabled": false,\n  "imageFormat": "JPEG",\n  "jpegEncoderType": "HARDWARE",\n  "jpegQuality": 80,\n  "videoEncoderQp": 0,\n  "videoCodecType": "H264",\n  "targetIntensity": 0\n },\n "etCamera": {\n  "enabled": true,\n  "width": 320,\n  "height": 240,\n  "fps": 10,\n  "autoExposureEnabled": false,\n  "exposureMinUs": "0",\n  "exposureMaxUs": "0",\n  "gainMin": 0,\n  "gainMax": 0,\n  "exposureUs": "1000",\n  "gain": 1,\n  "irLedEnabled": true,\n  "imageFormat": "JPEG",\n  "jpegEncoderType": "HARDWARE",\n  "jpegQuality": 80,\n  "videoEncoderQp": 0,\n  "videoCodecType": "H264",\n  "targetIntensity": 0\n },\n "rgbCamera": {\n  "enabled": true,\n  "width": 1408,\n  "height": 1408,\n  "fps": 10,\n  "autoExposureEnabled": true,\n  "exposureMinUs": "0",\n  "exposureMaxUs": "0",\n  "gainMin": 0,\n  "gainMax": 0,\n  "exposureUs": "0",\n  "gain": 0,\n  "irLedEnabled": false,\n  "imageFormat": "JPEG",\n  "jpegEncoderType": "HARDWARE",\n  "jpegQuality": 80,\n  "videoEncoderQp": 0,\n  "videoCodecType": "H264",\n  "targetIntensity": 0\n },\n "attention": {\n  "enabled": false\n }\n}\n')),(0,a.mdx)("p",null,"This JSON content shows exactly which sensors are used and how each sensor is configured. This can provide insight into how battery and thermal levels can be affected. For a general guide on which sensor to use depending on the use case go to the ",(0,a.mdx)("a",{parentName:"p",href:"/projectaria_tools/docs/ARK/glasses_manual/profile_guide"},"Recording Profile Guide")),(0,a.mdx)("h2",{id:"use-recording-sensor-profile"},"Use Recording (Sensor) Profile"),(0,a.mdx)("p",null,"Once retrieved a recording profile can be used to start recording or streaming."),(0,a.mdx)("p",null,"Below, we will use the sensor profile ",(0,a.mdx)("inlineCode",{parentName:"p"},"profile12")," obtained from the previous step to start streaming:"),(0,a.mdx)(o.default,{defaultValue:"sdk",values:[{label:"SDK",value:"sdk"},{label:"CLI",value:"cli"}],mdxType:"Tabs"},(0,a.mdx)(s.default,{value:"sdk",mdxType:"TabItem"},(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'streaming_manager = device.streaming_manager\nstreaming_config = aria.RecordingConfig()\nstreaming_config.profile_name = "profile12"\nstreaming_manager.streaming_config = streaming_config\nstreaming_manager.start_streaming()\n'))),(0,a.mdx)(s.default,{value:"cli",mdxType:"TabItem"},(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-bash"},"aria streaming start --profile profile12\n")))))}f.isMDXComponent=!0}}]);