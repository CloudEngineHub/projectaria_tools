"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4681],{15680:(t,e,a)=>{a.r(e),a.d(e,{MDXContext:()=>d,MDXProvider:()=>c,mdx:()=>x,useMDXComponents:()=>p,withMDXComponents:()=>s});var n=a(96540);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function i(){return i=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var a=arguments[e];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(t[n]=a[n])}return t},i.apply(this,arguments)}function o(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function l(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?o(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function m(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},i=Object.keys(t);for(n=0;n<i.length;n++)a=i[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(n=0;n<i.length;n++)a=i[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var d=n.createContext({}),s=function(t){return function(e){var a=p(e.components);return n.createElement(t,i({},e,{components:a}))}},p=function(t){var e=n.useContext(d),a=e;return t&&(a="function"==typeof t?t(e):l(l({},e),t)),a},c=function(t){var e=p(t.components);return n.createElement(d.Provider,{value:e},t.children)},u="mdxType",f={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},b=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,i=t.originalType,o=t.parentName,d=m(t,["components","mdxType","originalType","parentName"]),s=p(a),c=r,u=s["".concat(o,".").concat(c)]||s[c]||f[c]||i;return a?n.createElement(u,l(l({ref:e},d),{},{components:a})):n.createElement(u,l({ref:e},d))}));function x(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var i=a.length,o=new Array(i);o[0]=b;var l={};for(var m in e)hasOwnProperty.call(e,m)&&(l[m]=e[m]);l.originalType=t,l[u]="string"==typeof t?t:r,o[1]=l;for(var d=2;d<i;d++)o[d]=a[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}b.displayName="MDXCreateElement"},59123:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>m,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var n=a(58168),r=(a(96540),a(15680));const i={sidebar_position:50,title:"Calibration Data"},o="MPS output - Calibration",l={unversionedId:"data_formats/mps/slam/mps_calibration",id:"data_formats/mps/slam/mps_calibration",title:"Calibration Data",description:"Online calibration is generated as part of SLAM (Location in the Desktop Companion app) MPS requests.",source:"@site/docs/data_formats/mps/slam/mps_calibration.mdx",sourceDirName:"data_formats/mps/slam",slug:"/data_formats/mps/slam/mps_calibration",permalink:"/projectaria_tools/docs/data_formats/mps/slam/mps_calibration",draft:!1,editUrl:"https://github.com/facebookresearch/projectaria_tools/tree/main/website/docs/data_formats/mps/slam/mps_calibration.mdx",tags:[],version:"current",sidebarPosition:50,frontMatter:{sidebar_position:50,title:"Calibration Data"},sidebar:"tutorialSidebar",previous:{title:"Semi-Dense Point Cloud",permalink:"/projectaria_tools/docs/data_formats/mps/slam/mps_pointcloud"},next:{title:"Multi-SLAM",permalink:"/projectaria_tools/docs/data_formats/mps/slam/mps_multi_slam"}},m={},d=[{value:"Online calibration",id:"online-calibration",level:2},{value:"Static camera calibration",id:"static-camera-calibration",level:2}],s={toc:d},p="wrapper";function c(t){let{components:e,...a}=t;return(0,r.mdx)(p,(0,n.A)({},s,a,{components:e,mdxType:"MDXLayout"}),(0,r.mdx)("h1",{id:"mps-output---calibration"},"MPS output - Calibration"),(0,r.mdx)("p",null,"Online calibration is generated as part of SLAM (Location in the Desktop Companion app) ",(0,r.mdx)("a",{parentName:"p",href:"/projectaria_tools/docs/ARK/mps/"},"MPS requests"),"."),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("inlineCode",{parentName:"li"},"online_calibration.jsonl")," file")),(0,r.mdx)("p",null,"Static camera calibration may also be available in some datasets that include stationary cameras as well as moving Project Aria glasses."),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"Static camera calibration .csv file")),(0,r.mdx)("h2",{id:"online-calibration"},"Online calibration"),(0,r.mdx)("p",null,"The JSONL file contains one json online calibration record per line. Each record is a json dict object that contains timestamp metadata and the result of online calibration for the cameras and IMUs. The calibration parameters contain ",(0,r.mdx)("a",{parentName:"p",href:"/projectaria_tools/docs/tech_insights/camera_intrinsic_models"},"intrinsics")," and ",(0,r.mdx)("a",{parentName:"p",href:"/projectaria_tools/docs/data_formats/coordinate_convention/3d_coordinate_frame_convention"},"extrinsics")," parameters for each sensor as well as a time offsets which best temporally align their data. For how to load and read online calibrations in Python and C++, please checkout the ",(0,r.mdx)("a",{parentName:"p",href:"/projectaria_tools/docs/data_utilities/core_code_snippets/mps#online-calibration"},"code examples")),(0,r.mdx)("h2",{id:"static-camera-calibration"},"Static camera calibration"),(0,r.mdx)("p",null,"Some Aria data may contain the poses and intrinsic calibration of set stationary cameras. For the utility function to load the static cameras in Python and C++, please check the ",(0,r.mdx)("a",{parentName:"p",href:"/projectaria_tools/docs/data_utilities/core_code_snippets/mps#static-camera-calibration"},"code examples")),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Column"),(0,r.mdx)("th",{parentName:"tr",align:null},"Type"),(0,r.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"cam_uid")),(0,r.mdx)("td",{parentName:"tr",align:null},"string"),(0,r.mdx)("td",{parentName:"tr",align:null},"Unique identifier of camera")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"graph_uid")),(0,r.mdx)("td",{parentName:"tr",align:null},"string"),(0,r.mdx)("td",{parentName:"tr",align:null},"Unique identifier of the world coordinate frame")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"{tx,ty,tz,qx,qy,qz,qw}_world_cam")),(0,r.mdx)("td",{parentName:"tr",align:null},"float"),(0,r.mdx)("td",{parentName:"tr",align:null},"Pose of the camera coordinate frame in world frame T_world_cam, translation (tx, ty, tz) in meters and rotation quaternion (qx, qy, qz, qw)")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"image_width")),(0,r.mdx)("td",{parentName:"tr",align:null},"int"),(0,r.mdx)("td",{parentName:"tr",align:null},"Image size in pixels")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"image_height")),(0,r.mdx)("td",{parentName:"tr",align:null},"int"),(0,r.mdx)("td",{parentName:"tr",align:null},"Image size in pixels")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"intrinsics_type")),(0,r.mdx)("td",{parentName:"tr",align:null},"string"),(0,r.mdx)("td",{parentName:"tr",align:null},"Camera intrinsics calibration type. Currently support types: ",(0,r.mdx)("inlineCode",{parentName:"td"},"KANNALABRANDTK3"),": ",(0,r.mdx)("a",{parentName:"td",href:"/projectaria_tools/docs/tech_insights/camera_intrinsic_models#the-kannalabrandtk3-kb3-model"},"KB3 model"))),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"intrinsics_{0-7}")),(0,r.mdx)("td",{parentName:"tr",align:null},"float"),(0,r.mdx)("td",{parentName:"tr",align:null},"Camera intrinsics parameters")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"start_frame_idx")),(0,r.mdx)("td",{parentName:"tr",align:null},"int"),(0,r.mdx)("td",{parentName:"tr",align:null},"Used to determine if start frame number of the video is stationary, and if stationary camera pose and intrinsic calibration results can be applied. ",(0,r.mdx)("inlineCode",{parentName:"td"},"start_frame_idx")," and ",(0,r.mdx)("inlineCode",{parentName:"td"},"end_frame_idx")," will both be -1 if the stationary pose and intrinsic calibration can be applied to the whole video")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"end_frame_idx")),(0,r.mdx)("td",{parentName:"tr",align:null},"int"),(0,r.mdx)("td",{parentName:"tr",align:null},"Used to determine if the end frame number of the video is stationary and if stationary camera pose and intrinsic calibration results can be applied. ",(0,r.mdx)("inlineCode",{parentName:"td"},"start_frame_idx")," and ",(0,r.mdx)("inlineCode",{parentName:"td"},"end_frame_idx")," will both be -1 if the stationary pose and intrinsic calibration can be applied to the whole video")))))}c.isMDXComponent=!0}}]);