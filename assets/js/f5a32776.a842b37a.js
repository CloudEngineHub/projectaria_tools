"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5311],{3905:(t,e,a)=>{a.r(e),a.d(e,{MDXContext:()=>l,MDXProvider:()=>u,mdx:()=>g,useMDXComponents:()=>c,withMDXComponents:()=>p});var r=a(67294);function n(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function i(){return i=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var a=arguments[e];for(var r in a)Object.prototype.hasOwnProperty.call(a,r)&&(t[r]=a[r])}return t},i.apply(this,arguments)}function o(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,r)}return a}function s(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?o(Object(a),!0).forEach((function(e){n(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function d(t,e){if(null==t)return{};var a,r,n=function(t,e){if(null==t)return{};var a,r,n={},i=Object.keys(t);for(r=0;r<i.length;r++)a=i[r],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)a=i[r],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}var l=r.createContext({}),p=function(t){return function(e){var a=c(e.components);return r.createElement(t,i({},e,{components:a}))}},c=function(t){var e=r.useContext(l),a=e;return t&&(a="function"==typeof t?t(e):s(s({},e),t)),a},u=function(t){var e=c(t.components);return r.createElement(l.Provider,{value:e},t.children)},m="mdxType",_={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},f=r.forwardRef((function(t,e){var a=t.components,n=t.mdxType,i=t.originalType,o=t.parentName,l=d(t,["components","mdxType","originalType","parentName"]),p=c(a),u=n,m=p["".concat(o,".").concat(u)]||p[u]||_[u]||i;return a?r.createElement(m,s(s({ref:e},l),{},{components:a})):r.createElement(m,s({ref:e},l))}));function g(t,e){var a=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var i=a.length,o=new Array(i);o[0]=f;var s={};for(var d in e)hasOwnProperty.call(e,d)&&(s[d]=e[d]);s.originalType=t,s[m]="string"==typeof t?t:n,o[1]=s;for(var l=2;l<i;l++)o[l]=a[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}f.displayName="MDXCreateElement"},85821:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var r=a(87462),n=(a(67294),a(3905));const i={sidebar_position:10,title:"Overview"},o=void 0,s={unversionedId:"open_datasets/aria_digital_twin_dataset/aria_digital_twin_dataset",id:"open_datasets/aria_digital_twin_dataset/aria_digital_twin_dataset",title:"Overview",description:"Project Aria Tools provides Python and C++ APIs to access the Aria Digital Twin (ADT) dataset (paper).",source:"@site/docs/open_datasets/aria_digital_twin_dataset/aria_digital_twin_dataset.mdx",sourceDirName:"open_datasets/aria_digital_twin_dataset",slug:"/open_datasets/aria_digital_twin_dataset/",permalink:"/projectaria_tools/docs/open_datasets/aria_digital_twin_dataset/",draft:!1,editUrl:"https://github.com/facebookresearch/projectaria_tools/tree/main/website/docs/open_datasets/aria_digital_twin_dataset/aria_digital_twin_dataset.mdx",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10,title:"Overview"},sidebar:"tutorialSidebar",previous:{title:"Open Datasets",permalink:"/projectaria_tools/docs/open_datasets/"},next:{title:"Getting Started",permalink:"/projectaria_tools/docs/open_datasets/aria_digital_twin_dataset/getting_started"}},d={},l=[],p={toc:l},c="wrapper";function u(t){let{components:e,...a}=t;return(0,n.mdx)(c,(0,r.Z)({},p,a,{components:e,mdxType:"MDXLayout"}),(0,n.mdx)("p",null,"Project Aria Tools provides Python and C++ APIs to access the ",(0,n.mdx)("a",{parentName:"p",href:"https://www.projectaria.com/datasets/adt/"},"Aria Digital Twin (ADT) dataset")," (",(0,n.mdx)("a",{parentName:"p",href:"https://arxiv.org/abs/2306.06362"},"paper"),").\nThis section provides a detailed walk through of:"),(0,n.mdx)("ul",null,(0,n.mdx)("li",{parentName:"ul"},(0,n.mdx)("a",{parentName:"li",href:"/docs/open_datasets/aria_digital_twin_dataset/getting_started"},"Getting started"),(0,n.mdx)("ul",{parentName:"li"},(0,n.mdx)("li",{parentName:"ul"},"A quickstart to install Project Aria Tools python package and run Aria Digital Twin tutorial notebook to access and visualize ADT ground-truth data."))),(0,n.mdx)("li",{parentName:"ul"},(0,n.mdx)("a",{parentName:"li",href:"/projectaria_tools/docs/open_datasets/aria_digital_twin_dataset/dataset_download"},"Dataset download"),(0,n.mdx)("ul",{parentName:"li"},(0,n.mdx)("li",{parentName:"ul"},"A walkthrough of using ",(0,n.mdx)("inlineCode",{parentName:"li"},"adt_benchmark_dataset_downloader")," to download the published ADT dataset."))),(0,n.mdx)("li",{parentName:"ul"},(0,n.mdx)("a",{parentName:"li",href:"/docs/open_datasets/aria_digital_twin_dataset/visualizers"},"Visualizers"),(0,n.mdx)("ul",{parentName:"li"},(0,n.mdx)("li",{parentName:"ul"},"Compile and run our visualizer using an example that accesses ADT data in C++."))),(0,n.mdx)("li",{parentName:"ul"},(0,n.mdx)("a",{parentName:"li",href:"/docs/open_datasets/aria_digital_twin_dataset/advanced_tutorials"},"Advanced tutorial"),(0,n.mdx)("ul",{parentName:"li"},(0,n.mdx)("li",{parentName:"ul"},"A guide to learn how device synchronization works in ADT and run through a Jupyter notebook."))),(0,n.mdx)("li",{parentName:"ul"},(0,n.mdx)("a",{parentName:"li",href:"/docs/open_datasets/aria_digital_twin_dataset/data_loader"},"Data loader"),(0,n.mdx)("ul",{parentName:"li"},(0,n.mdx)("li",{parentName:"ul"},"APIs to load ADT data with handy code snippets"))),(0,n.mdx)("li",{parentName:"ul"},(0,n.mdx)("a",{parentName:"li",href:"/docs/open_datasets/aria_digital_twin_dataset/data_format"},"Data format"),(0,n.mdx)("ul",{parentName:"li"},(0,n.mdx)("li",{parentName:"ul"},"How ADT data is organized and stored")))))}u.isMDXComponent=!0}}]);